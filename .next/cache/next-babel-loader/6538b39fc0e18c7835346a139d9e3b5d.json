{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/beb/Code/challenges/bwell/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  body {\\n    margin: 0 auto;\\n    color: \", \"; \\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\nexport var theme = {\n  niceBlack: \"#001F3F\"\n};\nvar GlobalStyle = createGlobalStyle(_templateObject(), function (props) {\n  return props.theme.niceBlack;\n});\n_c = GlobalStyle;\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, \"GraphQL Job Board\"), __jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      })), __jsx(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, __jsx(GlobalStyle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }), __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalStyle\");","map":{"version":3,"sources":["/Users/beb/Code/challenges/bwell/pages/_app.tsx"],"names":["React","App","Head","ThemeProvider","createGlobalStyle","theme","niceBlack","GlobalStyle","props","MyApp","Component","pageProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,mBAAjD;AAUA,OAAO,IAAMC,KAAa,GAAG;AAC3BC,EAAAA,SAAS,EAAE;AADgB,CAAtB;AAIP,IAAMC,WAAW,GAAGH,iBAAH,oBAGJ,UAAAI,KAAK;AAAA,SAAIA,KAAK,CAACH,KAAN,CAAYC,SAAhB;AAAA,CAHD,CAAjB;KAAMC,W;;IAOeE,K;;;;;;;;;;;;;6BACV;AAAA,wBAC0B,KAAKD,KAD/B;AAAA,UACCE,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAGP,aACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,qCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE,MAAC,aAAD;AAAe,QAAA,KAAK,EAAEN,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,SAAD,eAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CALF,CADF;AAYD;;;;EAhBgCV,G;;SAAdQ,K;AAiBpB","sourcesContent":["import React from \"react\"\nimport App from \"next/app\"\nimport Head from \"next/head\"\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\"\n\nexport interface ITheme {\n  niceBlack: string;\n}\n\nexport interface IThemeWrapper {\n  theme: ITheme;\n}\n\nexport const theme: ITheme = {\n  niceBlack: \"#001F3F\",\n}\n\nconst GlobalStyle = createGlobalStyle<IThemeWrapper>`\n  body {\n    margin: 0 auto;\n    color: ${props => props.theme.niceBlack}; \n  }\n`\n\nexport default class MyApp extends App {\n  render() {\n    const { Component, pageProps } = this.props\n\n    return (\n      <React.Fragment>\n        <Head>\n          <title>GraphQL Job Board</title>\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        </Head>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <Component {...pageProps} />\n        </ThemeProvider>\n      </React.Fragment>\n    )\n  }\n};\n"]},"metadata":{},"sourceType":"module"}