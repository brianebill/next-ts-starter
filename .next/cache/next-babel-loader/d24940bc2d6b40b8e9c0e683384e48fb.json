{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/beb/Code/challenges/bwell/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  body {\\n    margin: 0 auto;\\n    color: \", \"; \\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\nexport var theme = {\n  niceBlack: \"#001F3F\"\n};\nvar GlobalStyle = createGlobalStyle(_templateObject(), function (props) {\n  return props.theme.niceBlack;\n});\n_c = GlobalStyle;\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, \"GraphQL Job Board\"), __jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      })), __jsx(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, __jsx(GlobalStyle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }), __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalStyle\");","map":{"version":3,"sources":["/Users/beb/Code/challenges/bwell/pages/_app.tsx"],"names":["theme","niceBlack","GlobalStyle","createGlobalStyle","props","MyApp","App","Component","pageProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,GAAA,MAAA,UAAA;AACA,OAAA,IAAA,MAAA,WAAA;AACA,SAAA,aAAA,EAAA,iBAAA,QAAA,mBAAA;AAUA,OAAO,IAAMA,KAAa,GAAG;AAC3BC,EAAAA,SAAS,EAAE;AADgB,CAAtB;AAIP,IAAMC,WAAW,GAAGC,iBAAH,CAAA,eAAA,EAAA,EAGJ,UAAA,KAAA,EAAK;AAAA,SAAIC,KAAK,CAALA,KAAAA,CAAJ,SAAA;AAHlB,CAAiB,CAAjB;KAAMF,W;;IAOeG,K;;;;;;;;;;;;;6BACV;AAAA,UAAA,WAAA,GAC0B,KAD1B,KAAA;AAAA,UACCE,SADD,GAAA,WAAA,CAAA,SAAA;AAAA,UACYC,SADZ,GAAA,WAAA,CAAA,SAAA;AAGP,aACE,KAAA,CAAC,KAAD,CAAA,QAAA,EAAA;AAAA,QAAA,MAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,EACE,KAAA,CAAA,IAAA,EAAA;AAAA,QAAA,MAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,EACE,KAAA,CAAA,OAAA,EAAA;AAAA,QAAA,MAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,EADF,mBACE,CADF,EAEE,KAAA,CAAA,MAAA,EAAA;AAAM,QAAA,IAAI,EAAV,UAAA;AAAsB,QAAA,OAAO,EAA7B,qCAAA;AAAA,QAAA,MAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,CAFF,CADF,EAKE,KAAA,CAAA,aAAA,EAAA;AAAe,QAAA,KAAK,EAApB,KAAA;AAAA,QAAA,MAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,EACE,KAAA,CAAA,WAAA,EAAA;AAAA,QAAA,MAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,CADF,EAEE,KAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAAA,QAAA,MAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,CAAA,CAFF,CALF,CADF;AAYD;;;;EAhBgCF,G;;SAAdD,K;AAiBpB","sourcesContent":["import React from \"react\"\nimport App from \"next/app\"\nimport Head from \"next/head\"\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\"\n\nexport interface ITheme {\n  niceBlack: string;\n}\n\nexport interface IThemeWrapper {\n  theme: ITheme;\n}\n\nexport const theme: ITheme = {\n  niceBlack: \"#001F3F\",\n}\n\nconst GlobalStyle = createGlobalStyle<IThemeWrapper>`\n  body {\n    margin: 0 auto;\n    color: ${props => props.theme.niceBlack}; \n  }\n`\n\nexport default class MyApp extends App {\n  render() {\n    const { Component, pageProps } = this.props\n\n    return (\n      <React.Fragment>\n        <Head>\n          <title>GraphQL Job Board</title>\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        </Head>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <Component {...pageProps} />\n        </ThemeProvider>\n      </React.Fragment>\n    )\n  }\n};\n"]},"metadata":{},"sourceType":"module"}